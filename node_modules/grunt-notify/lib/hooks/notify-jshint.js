/*
 * grunt-notify
 * https://github.com/dylang/grunt-notify
 *
 * Copyright (c) 2013 Dylan Greene
 * Licensed under the MIT license.
 */
'use strict';

module.exports = function(grunt, options) {

  var notify = require('../notify-lib');

  var filename = '';
  var reason = '';
  var lineNumber = '';
  var count = 0;
  var enabled;

  function enable() {
    if (!enabled) {
      grunt.util.hooker.hook(grunt.log, 'writeln', grabErrors);
      enabled = true;
    }
  }

  function disable() {
    if (enabled) {
      grunt.util.hooker.unhook(grunt.log, 'writeln');
      enabled = false;
    }
  }

  function grabErrors(message) {
    if (!options.enabled) {
      return;
    }

    if (message) {
      var msg = grunt.log.uncolor(message).trim();
      if (message.match(/^\u001b\[1m(.+?)\u001b\[22m$/)) {
        filename = msg;
      } else if (filename) {
        if (!lineNumber) {
          lineNumber = msg.match(/^\d+/)[0];
        } else if (!reason) {
          reason = msg;
        }
      }
    } else {
      filename = lineNumber = reason = '';
    }
    if (filename && lineNumber && reason) {
      notify({
        title: options.title + 'JSHint error',
        message: [
          filename + '@' + lineNumber,
          reason
        ].join('\n'),
        sticky: true
      });
      lineNumber = reason = '';
      count++;

      if (count > options.max_jshint_notifications) {
        disable();
        return;
      }
    }
  }

  function checkForJSHint(message) {
    if (message.match(/jshint/)) {
      enable();
    } else {
      disable();
    }
  }

  // try to catch jshint errors
  grunt.util.hooker.hook(grunt.log, 'header', checkForJSHint);

  function setOptions(opts) {
    options = opts;
  }

  return {
    setOptions: setOptions
  };

};
